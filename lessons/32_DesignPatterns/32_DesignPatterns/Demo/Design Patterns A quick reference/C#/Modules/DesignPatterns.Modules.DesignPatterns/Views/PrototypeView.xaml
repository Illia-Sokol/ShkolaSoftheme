<UserControl x:Class="DesignPatterns.Modules.Views.PrototypeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
            Height="768" Width="900">
    <Grid>
        <TabControl Background="Transparent" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Stretch">
            <TabItem Header="Prototype Pattern" IsSelected="True" Style="{StaticResource TabItemStyle}" Background="Transparent" >
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35" />
                        <RowDefinition Height="35" />
                        <RowDefinition Height="35" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Foreground="White" Grid.Row="0" Grid.Column="0" Text="Model Name :" HorizontalAlignment="Right" />
                    <TextBlock Foreground="White" Grid.Row="1" Grid.Column="0" Text="Price :" HorizontalAlignment="Right" />
                    <TextBlock Foreground="White" Grid.Row="2" Grid.Column="0" Text="Warranty :" HorizontalAlignment="Right" />
                    <TextBlock Foreground="White" Grid.Row="0" Grid.Column="1" Text="{Binding ModelName}" Width="Auto" Margin="10,0,0,0" HorizontalAlignment="Left" />
                    <TextBlock Foreground="White" Grid.Row="1" Grid.Column="1" Text="{Binding Price}" Width="Auto" Margin="10,0,0,0" HorizontalAlignment="Left" />
                    <TextBlock Foreground="White" Grid.Row="2" Grid.Column="1" Text="{Binding Warranty}" Width="Auto" Margin="10,0,0,0" HorizontalAlignment="Left" />
                </Grid>
            </TabItem>
            <TabItem  Header="Structure Diagram"  Style="{StaticResource TabItemStyle}">
                <Image Source="{StaticResource PrototypeStructureImage}" VerticalAlignment="Top"/>
            </TabItem>
            <TabItem  Header="Definitions &amp; Motivation" Style="{StaticResource TabItemStyle}">
                <FlowDocument Background="Transparent" ColumnWidth="500">
                    <List MarkerOffset="25" MarkerStyle="Disc">
                        <ListItem>
                            <Paragraph>Intent :</Paragraph>
                            <List Margin="0" Padding="0">
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph  FontWeight="Bold">
                                        Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype.
                                    </Paragraph>
                                </ListItem>
                            </List>
                        </ListItem>

                        <ListItem>
                            <Paragraph FontWeight="Bold">Motivation :</Paragraph>
                            <List Margin="0" Padding="0">
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        An example of the Prototype design pattern would be in a GUI building tool.
                                    </Paragraph>
                                </ListItem>
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        For each graphic element which the user may customize and add to the application 
                                        interface (buttons, text boxes, etc.), the user has many options to choose 
                                        for style, color, font, size, etc.
                                    </Paragraph>
                                </ListItem>
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        Keeping a single prototype of each GUI element on a palette for the user to 
                                        choose from allows the user to customize each type once and drag them onto 
                                        the interface project as desired.
                                    </Paragraph>
                                </ListItem>
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        Not only does this produce a consistent look and feel across the application,
                                        but the GUI building tool need only call the instance's clone() method each 
                                        time it is dragged from the palette to the GUI, regardless of the specific 
                                        class selected by the user.
                                    </Paragraph>
                                </ListItem>
                            </List>
                        </ListItem>

                        <ListItem>
                            <Paragraph FontWeight="Bold">Applicability :</Paragraph>
                            <List Margin="0" Padding="0">
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        When the classes to instantiate are specified at run-time, for example, by dynamic loading; or
                                    </Paragraph>
                                </ListItem>
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        to avoid building a class hierarchy of factories that parallels the class hierarchy of products; or
                                    </Paragraph>
                                </ListItem>
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        When instances of a class can have one of only a few different combinations of state. It may be more
                                        convenient to install a corresponding number of prototypes and clone them rather than instantiating the class
                                        manually, each time with the appropriate state.
                                    </Paragraph>
                                </ListItem>
                            </List>
                        </ListItem>
                    </List>
                </FlowDocument>
            </TabItem>
            <TabItem Header="Participants"  Style="{StaticResource TabItemStyle}">
                <FlowDocument Background="Transparent" ColumnWidth="500">
                    <List MarkerOffset="25" MarkerStyle="Disc">
                        <ListItem>
                            <Paragraph FontWeight="Bold">Prototype :</Paragraph>
                            <List Margin="0" Padding="0" >
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        Declares an interface for cloning itself.
                                    </Paragraph>
                                </ListItem>
                            </List>
                        </ListItem>
                        <ListItem>
                            <Paragraph FontWeight="Bold">
                                ConcretePrototype :
                            </Paragraph>
                            <List  Margin="0" Padding="0">
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        Implements an operation for cloning itself.
                                    </Paragraph>
                                </ListItem>
                            </List>
                        </ListItem>
                        <ListItem>
                            <Paragraph FontWeight="Bold">
                                Client :
                            </Paragraph>
                            <List  Margin="0" Padding="0">
                                <ListItem Margin="40,0,0,0">
                                    <Paragraph>
                                        Creates a new object by asking a prototype to clone itself.
                                    </Paragraph>
                                </ListItem>
                            </List>
                        </ListItem>
                    </List>
                </FlowDocument>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
